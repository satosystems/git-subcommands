.\" Automatically generated by Pandoc 2.11.2
.\"
.TH "GIT-ALL-REBASE" "1" "2020-12-06" "v1.0.0" "Git Manual"
.hy
.SS NAME
.PP
git-all-rebase - Rebase all local unmerged branches to specified branch
.SS SYNOPSIS
.PP
\f[B]\f[BI]git all-rebase\f[B]\f[R] <branch>
.PD 0
.P
.PD
\f[B]\f[BI]git all-rebase\f[B]\f[R] \[en]version
.PD 0
.P
.PD
\f[B]\f[BI]git all-rebase\f[B]\f[R] \[en]help
.SS DESCRIPTION
.PP
Rebases all unmerged branches.
.PP
Suppose you have a commit tree repository like this:
.IP
.nf
\f[C]
*  (topic3)
| *  (topic5)
| *  (topic7, topic4)
|/
*    (HEAD -> develop)
|\[rs]
| | *  (topic2)
| | *
| |/
| *  (topic8, topic1)
|/
*    (main)
|\[rs]
| *
|/|
| | *  (topic6)
| |/
| *  (topic0)
|/
*
\f[R]
.fi
.PP
If you merge topic3 into develop from here, it will look like this:
.IP
.nf
\f[C]
*    (HEAD -> develop)
|\[rs]
| *  (topic3)
|/
| *  (topic5)
| *  (topic7, topic4)
|/
*
|\[rs]
| | *  (topic2)
| | *
| |/
| *  (topic8, topic1)
|/
*    (main)
|\[rs]
| *
|/|
| | *  (topic6)
| |/
| *  (topic0)
|/
*
\f[R]
.fi
.PP
Enter the following command for this repository:
.PP
\f[C]git all-rebase develop\f[R]
.PP
Then, it will be rebased as follows.
.IP
.nf
\f[C]
*  (topic2)
*
| *  (topic5)
| *  (topic7, topic4)
|/
| *  (topic6)
|/
*    (HEAD -> develop)
|\[rs]
| *  (topic3)
|/
*
|\[rs]
| *  (topic8, topic1)
|/
*    (main)
|\[rs]
| *
|/|
| *  (topic0)
|/
*
\f[R]
.fi
.PP
The process will be interrupted if there is a conflict during rebase, so
manually resolve the conflict and re-execute the command.
.SS OPTIONS
.PP
\f[B]<branch>\f[R]: Rebase target branch.
.PP
\f[B]--version\f[R]: Show version.
.PP
\f[B]--help\f[R]: Show help.
.SH AUTHORS
Satoshi Ogata.
